#!/bin/bash

export PATH=/usr/bin:/bin
export DISPLAY=:0

cd $( dirname $0 )

isrunning() {
    local bn="$1"
    echo -n "$bn: "
    if [ -s "/tmp/picsofourlives/$bn.pid" -a -e /proc/$( cat "/tmp/picsofourlives/$bn.pid" )/cmdline ]; then
        cat /proc/$( cat "/tmp/picsofourlives/$bn.pid" )/cmdline | grep -q "$bn"
        if [ $? -eq 0 ]; then
            echo "running (pid $( cat "/tmp/picsofourlives/$bn.pid" ))"
            return 0
        fi
    fi
    echo not running
    return 1
}

case "$1" in

    start-if-not-running )
        for watcher in bin/watch-for-*; do
            bn=$( basename "$watcher" )
            if ! isrunning "$bn" >/dev/null 2>&1 ; then
                echo "$bn starting"
                mkdir -p /tmp/picsofourlives
                nohup $watcher >> /tmp/picsofourlives/log.out 2>&1 &
                echo $! > "/tmp/picsofourlives/$bn.pid"
                disown
            else
                echo "$bn already running"
            fi
        done
        ;;

    start )
        for watcher in bin/watch-for-*; do
            bn=$( basename "$watcher" )
            echo "$bn starting"
            mkdir -p /tmp/picsofourlives
            nohup $watcher >> /tmp/picsofourlives/log.out 2>&1 &
            echo $! > "/tmp/picsofourlives/$bn.pid"
            disown
        done
        ;;

    stop )
        for pidfile in /tmp/picsofourlives/*.pid; do
            if [ -s "$pidfile" ]; then
                bn=$( basename "$pidfile" .pid )
                echo "$bn stopping"
                kill $( cat "$pidfile" )
            fi
            rm -f "$pidfile"
        done
        ;;

    status )
        for watcher in bin/watch-for-*; do
            bn=$( basename "$watcher" )
            isrunning "$bn"
        done
        ;;

    restart )
        $0 stop
        sleep 1
        $0 start
        ;;

    * )
        echo "$0 [start|stop|status|restart|start-if-not-running|help]" >&2 
        ;;

esac

# vim: ts=4 expandtab
